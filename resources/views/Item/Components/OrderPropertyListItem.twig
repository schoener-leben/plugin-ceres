<script type="x/template" id="vue-order-property-list-item">
    <div>

        <div v-if="inputType === 'text' || inputType === 'float' || inputType === 'int'" class="input-unit order-property-input" :class="{ 'active': property.value, 'error': hasError }" data-validate="text">
            <input type="text" @input="onInputValueChanged($event.target.value)" v-model="inputValue" v-tooltip data-toggle="tooltip" :title="property.names.description">
            <label class="d-flex">
                <span class="text-truncate">${property.names.name}</span>
                <strong class="ml-1" v-if="surcharge > 0">(+ ${ surcharge | currency}) *</strong>
            </label>
        </div>

        <div v-else-if="inputType === 'checkbox' || inputType === 'radio'" class="form-check">
            <input :name="group ? group.id : 'check' + _uid"
                   :id="'check' + _uid"
                   :value="property.id"
                   v-model="property.value"
                   @change="onInputValueChanged(inputType === 'checkbox' ? $event.target.checked : $event.target.value)"
                   class="form-check-input"
                   :type="inputType">

            <label class="form-check-label text-appearance d-flex"
                   :for="'check' + _uid"
                   :class="{ 'text-danger': hasError }"
                   v-tooltip data-toggle="tooltip"
                   :title="property.names.description">
                <span class="text-wrap">${ property.names.name }</span>
                <strong class="ml-1" v-if="surcharge > 0">(+ ${ surcharge | currency}) *</strong>
            </label>
        </div>

        <div v-else-if="inputType === 'selection'" :class="{ 'd-flex': selectedDescription }">
            <div 
                class="input-unit order-property-input"
                :class="{ 'active': property.value, 'error': hasError }"
                v-tooltip
                data-toggle="tooltip"
                :title="property.names.description">
                <select v-model="selectionValue" @change="onInputValueChanged($event.target.value)" class="custom-select">
                    <option :selected="true" :value="null">{{ trans("Ceres::Template.singleItemPleaseSelect") }}</option>
                    <option :selected="property.id === id" :value="id" v-for="(value, id) in property.selectionValues">${ value.name }</option>
                </select>
                <label class="d-flex w-100">
                    <span class="text-truncate">${property.names.name}</span>
                    <strong class="ml-1" v-if="surcharge > 0">(+ ${ surcharge | currency}) *</strong>
                </label>
            </div>
            <popper class="order-property-selection-info-popper" v-cloak v-if="selectedDescription" placement="bottom">
                <template #handle>
                    <button class="btn btn-icon btn-circle btn-default m-1">
                        <i class="fa fa-info default-float"></i>
                    </button>
                </template>
                <template #content>
                    ${ selectedDescription }
                </template>
            </popper>
        </div>

        <div v-else-if="inputType === 'file'">
            <label class="input-unit file-input order-property-input component-loading with-icon sending" :class="{ 'active': property.value, 'isLoading': waiting, 'error': hasError }" v-tooltip data-toggle="tooltip" :title="property.names.description">
                <span class="input-unit-preview" :class="{ 'disabled': waiting }">${selectedFileName}</span>
                <span class="input-unit-label d-flex">
                    <span class="text-truncate">${property.names.name}</span>
                    <strong class="ml-1" v-if="surcharge > 0">(+ ${ surcharge | currency}) *</strong>
                </span>
                <span class="input-unit-btn" v-if="!selectedFile">
                    <i class="fa fa-ellipsis-h"></i>
                </span>
                <span class="input-unit-btn" v-else :disabled="waiting" @click.prevent="clearSelectedFile()">
                    <i class="fa fa-times"></i>
                </span>
                <input :disabled="waiting" ref="fileInput" type="file" size="50" accept="image/*" @change="setPropertyFile($event)">
            </label>
        </div>

    </div>
</script>
