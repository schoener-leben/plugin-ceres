{{ component( "Ceres::Basket.Components.AddToBasket" ) }}
{{ component( "Ceres::Item.Components.QuantityInput" ) }}

{% import "Ceres::Basket.Macros.AddToBasket" as AddToBasket %}

<script type="x/template" id="vue-wish-list-item">
    <div class="basket-item-container basket-list-item">
        <div class="basket-item component-loading with-icon">
            <div class="image-container">
                <img class="img-basket-small" v-if="image" :src="image" :title="wishListItem | itemName">
            </div>

            <div class="meta-container-wrapper">
                <div class="meta-container-wrapper-inner mb-2">
                    <div class="meta-container">
                        <div>
                            <a :href="wishListItem | itemURL" class="item-name text-primary text-appearance">
                                ${ wishListItem | itemName }
                            </a>

                            <div class="item-base-price">
                                ${ unitPrice | currency }
                            </div>

                            <div class="item-small-prices text-muted" v-if="!(wishListItem.unit.unitOfMeasurement === 'C62' && wishListItem.unit.content === 1) && wishListItem.variation.mayShowUnitPrice">
                                <div>
                                    ${ basePrice }
                                </div>
                                <div>
                                    <strong>{{ trans("Ceres::Template.wishListContent") }}: </strong>
                                    ${ wishListItem.unit.content } ${ wishListItem.unit.names.name }
                                </div>
                            </div>

                            <div class="item-small-prices">
                                <div v-for="attribute in wishListItem.attributes">
                                    <strong>${ attribute.attribute.names.name }: </strong>
                                    <span>${ attribute.value.names.name }</span>
                                </div>
                            </div>

                            <div class="item-small-prices text-muted">
                                <template v-for="propertyGroup in transformedVariationProperties">
                                    <div v-for="property in propertyGroup.properties">
                                        <strong v-if="propertyGroup.name">${ propertyGroup.name }: </strong>
                                        <span>${ property.names.name }</span>
                                    </div>
                                </template>
                            </div>
                        </div>
                    </div>
                    <div class="basket-item-container-right">
                        <div class="qty-box-container">
                            <quantity-input
                                template="#vue-quantity-input"
                                @quantity-change="quantity = $event"
                                :value="quantity"
                                :min="wishListItem.variation.minimumOrderQuantity"
                                :max="wishListItem.variation.maximumOrderQuantity"
                                :timeout="0" 
                                :interval="wishListItem.variation.intervalQuantity"
                                :variation-id="wishListItem.variation.id">
                            </quantity-input>
                        </div>

                        <div class="price-box mb-1">
                            <div class="item-total-price">
                                ${ quantity * unitPrice | currency }
                            </div>

                            <div class="item-remove-container">
                                <div class="btn btn-sm item-remove-button" @click="removeItem()">
                                    <span>
                                        {{ trans("Ceres::Template.wishListDelete") }}
                                        <i v-waiting-animation-infinite class="fa fa-trash-o" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="text-right">{{ AddToBasket.printVueComponent( "wishListItem", false, false, { ":has-price": "wishListItem | hasItemDefaultPrice", "is-wish-list": "true", ":propQuantity": "quantity" } ) }}</div>

                <div class="item-additional-information-container">
                    <div class="item-additional-information">
                        <template v-if="isDataFieldVisible('wishListItem.item.id')">
                            <div class="mt-3">
                                <strong>{{ trans("Ceres::Template.wishListItemId") }}:</strong>
                                <span>${ wishListItem.item.id }</span>
                            </div>
                        </template>

                        <template v-if="isDataFieldVisible('wishListItem.variation.number')">
                            <div v-if="wishListItem.variation.number">
                                <strong>{{ trans("Ceres::Template.wishListItemNumber") }}:</strong>
                                <span>${ wishListItem.variation.number }</span>
                            </div>
                        </template>
                        
                        <template v-if="isDataFieldVisible('wishListItem.variation.availability')">
                            <div v-if="wishListItem.variation.availability.names.name">
                                <strong>{{ trans("Ceres::Template.wishListAvailability") }}:</strong>
                                <span class="badge" :class="'availability_' + wishListItem.variation.availability.id">${ wishListItem.variation.availability.names.name }</span>
                            </div>
                        </template>

                        <template v-if="isDataFieldVisible('wishListItem.texts.description')">
                            <p class="my-3" v-if="wishListItem.texts.description" v-html="wishListItem.texts.description"></p>
                        </template>

                        <template v-if="isDataFieldVisible('wishListItem.texts.shortDescription')">
                            <p class="my-3" v-if="wishListItem.texts.shortDescription" v-html="wishListItem.texts.shortDescription"></p>
                        </template>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>
